@page "/"
@using System.Reflection.Emit
@using System.Reflection

<PageTitle>Index</PageTitle>

<Editor ApiKey="5i1x7uisk6hu7vjc6yalt8m37sv8wr65s6i3skp7eredafyn" @bind-Value="@content" Conf="tinyConf"/>

<div>
  <h3>The content:</h3>
  <div>@content</div>
</div>

@code {

  private Dictionary<string, object> tinyConf;
  private string content { get; set;  }

  private Dictionary<string, object> AddToolbarGroup(string name, string items)
  {
    return new Dictionary<string, object>
    {
      {
        "name", name
      },
      {
        "items", items.Split(" ", StringSplitOptions.TrimEntries | StringSplitOptions.RemoveEmptyEntries)
      }
    };
  }
  
  private Dictionary<object, object> AddMenuBarItem(object name, string items)
  {
    var dict = new Dictionary<object, object>();
    dict.Add(
      name,
      new
      {
        title = name,
        items,
      }
    );
    return dict;
  }

  protected override void OnInitialized()
  {
    var assembly = GetType().Assembly.GetName().Version;

    var toolbar = new[]
    {
        AddToolbarGroup("styles", "styleselect"),
        AddToolbarGroup("formattting", "bold  italic"),
        AddToolbarGroup("alignment", "alignleft aligncenter alignright alignjustified"),
        AddToolbarGroup("history", "undo redo"),
    };    
    
    var menu = new 
    {
      edit = new { title = "Edit", items = "undo redo | cut copy paste | selectall | searchreplace"},
      insert = new { title = "Insert", items = "image link media template codesample inserttable | charmap emoticons hr | pagebreak nonbreaking anchor toc | insertdatetime"},
      format = new { title = "Format", items = "bold italic underline strikethrough superscript subscript codeformat | formats blockformats fontformats fontsizes align lineheight | forecolor backcolor | removeformat"},
      view = new { title = "View", items = "code | visualaid visualchars visualblocks | spellchecker | preview fullscreen"},
      table = new { title = "Table", items = "inserttable | cell row column | tableprops deletetable" },
      tools = new { title = "Tools", items = "spellchecker spellcheckerlanguage | code wordcount"}
    };    

    tinyConf = new Dictionary<string, object>
    {
      { "width", "90%" },
      { "cache_suffix", $"?=v{assembly.ToString()}" },
      { "branding", false},
      { "statusbar", true },
      { "height", "400px"},
      { "max_height", 400},
      { "toolbar", toolbar},
      { "menubar", "edit insert"},
      { "menu", menu }
    };

    base.OnInitialized();
  }

}