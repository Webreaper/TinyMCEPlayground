@page "/"
@using System.Reflection.Emit
@using System.Reflection

<PageTitle>Index</PageTitle>

@if (tinyConf != null)
{
  <Editor ApiKey="5i1x7uisk6hu7vjc6yalt8m37sv8wr65s6i3skp7eredafyn" @bind-Value="@Content" Conf="tinyConf"/>
}

@code {

  private Dictionary<string, object>? tinyConf;
  private string? Content { get; set;  }
  
  protected override void OnInitialized()
  {
    var assembly = GetType().Assembly.GetName().Version;

    var toolbar = new [] {
      new { name = "history", items = new [] {"undo", "redo", "emoticons"} },
      new { name = "styles", items = new [] {"styles"} },
      new { name = "formatting", items = new [] {"bold", "italic"} },
      new { name = "alignment", items = new [] {"align", "aligncenter", "alignright", "alignjustify"} },
      new { name = "indentation", items = new [] {"outdent", "indent"} },
      new { name = "view", items = new [] {"image", "fullscreen"} }
    };    
    
    // Note - when adding/removing top-level menus, it's not enough to do it using the 'menu'
    // config setting. Any top-level menus you want to remove must explicitly do it via the 
    // 'menubar' config setting. Also, menu items won't appear unless their plugin is loaded.
    var menu = new
    {
      edit = new { title = "Edit", items = "undo redo | cut copy paste | selectall | searchreplace"},
      insert = new { title = "Insert", items = "image link media template codesample inserttable | hr | pagebreak nonbreaking anchor toc | insertdatetime"},
      format = new { title = "Format", items = "bold italic underline strikethrough superscript subscript codeformat | formats blockformats fontformats fontsizes align lineheight | forecolor backcolor | removeformat"},
      view = new { title = "View", items = "code | visualaid visualchars visualblocks | spellchecker | preview fullscreen"},
      table = new { title = "Table", items = "inserttable | cell row column | tableprops deletetable" },
      tools = new { title = "Tools", items = "wordcount"}
    };
    var menubar = "edit insert format view table tools";
    
    tinyConf = new Dictionary<string, object>
    {
      { "width", "95%" },
      { "cache_suffix", $"?=v{assembly?.ToString()}" },
      { "branding", false},
      { "plugins", "anchor autolink autoresize emoticons fullscreen image lists advlist link quickbars media searchreplace table wordcount"},
      { "statusbar", true },
      { "min_height", 400},
      { "max_height", 600},
      { "toolbar", toolbar},
      { "menubar", menubar},
      { "menu", menu },
      { "file_picker_types", "file image media" },
      { "quickbars_insert_toolbar", false } // Don't show the quickinsertbar on newlines
    };
    
    // TODO: Investigate upload callbacks:
    // https://www.tiny.cloud/docs/tinymce/6/image/#example-using-images_upload_handler
    // TODO: Investigate file picker callback
    // https://www.tiny.cloud/docs/tinymce/6/image/#interactive-example
    
    base.OnInitialized();
  }
}